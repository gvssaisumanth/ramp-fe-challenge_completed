{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        return response;\n      }\n\n      let previousData = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data; // added this line\n\n      return {\n        data: [previousData, ...response.data],\n        nextPage: response.nextPage\n      }; // modified data from {response.data } to [...previousData,...response.data]\n    });\n  }, [fetchWithoutCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"re0bh3B24DoPJCSAD+e+httfpOY=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithoutCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","response","fetchWithCache","page","nextPage","previousResponse","previousData","data","invalidateData"],"sources":["/Users/saisumanthgaali/Downloads/ramp-fe-challenge_completed/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    )\n\n    setPaginatedTransactions((previousResponse) => {\n      if (response === null || previousResponse === null) {\n        return response\n      }\n      \n     let previousData:any = paginatedTransactions?.data // added this line\n      return { data: [previousData,...response.data], nextPage: response.nextPage } // modified data from {response.data } to [...previousData,...response.data]\n    })\n  }, [fetchWithoutCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCH,cAAc,EAArD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAExD,IAFwD,CAAlE;EAIA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IACvC,MAAMS,QAAQ,GAAG,MAAMC,cAAc,CACnC,uBADmC,EAEnC;MACEC,IAAI,EAAEL,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACM;IADnE,CAFmC,CAArC;IAOAL,wBAAwB,CAAEM,gBAAD,IAAsB;MAC7C,IAAIJ,QAAQ,KAAK,IAAb,IAAqBI,gBAAgB,KAAK,IAA9C,EAAoD;QAClD,OAAOJ,QAAP;MACD;;MAEF,IAAIK,YAAgB,GAAGR,qBAAH,aAAGA,qBAAH,uBAAGA,qBAAqB,CAAES,IAA9C,CAL8C,CAKK;;MAClD,OAAO;QAAEA,IAAI,EAAE,CAACD,YAAD,EAAc,GAAGL,QAAQ,CAACM,IAA1B,CAAR;QAAyCH,QAAQ,EAAEH,QAAQ,CAACG;MAA5D,CAAP,CAN6C,CAMiC;IAC/E,CAPuB,CAAxB;EAQD,CAhB2B,EAgBzB,CAACR,iBAAD,EAAoBE,qBAApB,CAhByB,CAA5B;EAkBA,MAAMU,cAAc,GAAGhB,WAAW,CAAC,MAAM;IACvCO,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEQ,IAAI,EAAET,qBAAR;IAA+BD,OAA/B;IAAwCG,QAAxC;IAAkDQ;EAAlD,CAAP;AACD;;GA7Beb,wB;UACyBD,c"},"metadata":{},"sourceType":"module"}